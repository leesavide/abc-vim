% bracinho.fmt        -*- abc -*-
% Bracinhos de violão, viola, cavaquinho etc. (Guitar diagrams)

% Copyright (C) Hudson Lacerda (2004)
%   Based on code from `deco.abc' and `syms.c', from abcm2ps:
%      Copyright (C) Jean-François Moine (1998-2004)
%
%   This program is free software; you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation; either version 2 of the License, or
%   (at your option) any later version.
%
%   This program is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%
%   You should have received a copy of the GNU General Public License
%   along with this program; if not, write to the Free Software
%   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


% Prefixo para os operadores deste arquivo: gd_ (guitar diagrams)

 
% SINTAXE:
% 
% deco <nome> 3 bracinho 50 0 0 <casa>^<nome> <descr(1)> <descr(2)> <descr(3)> ...
% 
% <casa>^<nome>
% A primeira parte da string é impressa à direita do bracinho, na altura
% da primeira casa, e serve para indicar a posição (casa).  Quando um
% caracter ^ é encontrado, o restante da string é impresso acima do
% bracinho (nome do acorde).
% - Se essa string começa com um hífen, é ignorada.
% - Um espaço poder ser representado por \1 (ou \20 etc. mas não por \0 ou \040)
%
% Para ocultar/exibir o nome, execute um operador postscript:
% %%postscript bracinho_com_nome
% %%postscript bracinho_sem_nome
% 
% <descr(N)>
% As strings subseqüentes descrevem a ação sobre cada corda:
% 
% - Um algarismo de 1 a 5 indica a casa em que deve-se colocar um dedo
% (bolinha). 0 indica corda solta.
% - Um x coloca indicação de não tocar a corda.
% - [ após um algarismo inicia uma pestana.
% - ] após um algarismo termina uma pestana.
% - { após um algarismo inicia uma pestana.
% - } após um algarismo termina uma pestana.
% 
% As pestanas indicadas por colchetes são independentes daquelas
% indicadas por chaves.
% 
% - Qualquer outro caracter é ignorado.
% (Sugere-se utilizar hífen - para `pular' ou adicionar uma corda sem
% símbolos.)
% 
% O número de cordas é calculado automaticamente como o número de
% <descr(N)> utilizados. O número de casas é fixo em 5.
% 
% Exemplos:
% 
% % !violão/guitarra:!
% deco Ab/C 3 bracinho 50 0 0     1a.\1casa x   3   1   1   4   1
% deco Am9/G 3 bracinho 50 0 0    ^Am9/G    3   0   2   4   1   0
% % !escala! % várias bolinhas na mesma casa
% deco escala 3 bracinho 50 0 0   escala    x   24  124 134 x   x
% % !pestanas!
% deco G#m  3 bracinho 50 0 0     IV        1[  3   3   -   -   1]
% deco A/C# 3 bracinho 50 0 0     -         x   4   2[  -   5{  2]5}
% deco A/C#(II) 3 bracinho 50 0 0 II        x   3   1[  1   4{  1]4}
% % !cavaquinho:!
% deco Em 3 bracinho 50 0 0 Em 2 0 0 2     % 4 cordas
% % !viola caipira (cebolão):!
% deco B7 3 bracinho 50 0 0 B7 0 2 3 4 5   % 5 cordas
%
%
% O operador bracinho_grande gera um bracinho 2 vezes maior que o normal.
%
% Exemplo:
%
% postscript (^Am x 0 2 2 1 0) 0 0 bracinho_grande


% !NÃO IMPLEMENTADO: numeração de dedos (só se for em outro fmt... :)!
% ! Questão: ordem de importância: nome_X_casa ? !


% POSTSCRIPT CODE:

% !compatibilidade com versões anteriores a 4.2.0 !
postscript currentdict /showc known false eq {
postscript    /showc{dup stringwidth pop 0.5 mul neg 0 RM show}!
postscript } if

postscript /gd_incr_numpal{/gd_numpal gd_numpal 1 add def}def

postscript /gd_resettemp{/gd_tempstring 20 string def}def

postscript /gd_incrindice{/gd_indice gd_indice 1 add def}def

postscript /gd_reinitindice{/gd_indice 0 def}def

postscript /gd_armazena{gd_palavras exch gd_numpal exch put gd_incr_numpal}def

postscript /gd_nome? true def

postscript /bracinho_com_nome{/gd_nome? true def}def
postscript /bracinho_sem_nome{/gd_nome? false def}def

postscript /gd_separa_palavras {
postscript     /gd_texto exch def
postscript     /gd_palavras 20 array def
postscript     /gd_tempstring 20 string def
postscript     /gd_numpal 0 def
postscript     /gd_indice 0 def
postscript     /imprimir? 0 def
postscript     /gd_tamanho gd_texto length 1 sub def
postscript     0 1 gd_tamanho {
postscript         dup gd_texto exch 1 getinterval dup
postscript    ( ) eq { 
postscript        pop pop % elimina o caracter atual e o for-index
postscript 	    imprimir? 1 eq {gd_tempstring gd_armazena}if
postscript 	    gd_reinitindice
postscript 	    gd_resettemp
postscript 	    /imprimir? 0 def
postscript     } { 
postscript 	    gd_tempstring exch
postscript 	    gd_indice exch putinterval
postscript 	    gd_incrindice
postscript 	    /imprimir? 1 def
postscript 	    gd_tamanho eq {gd_tempstring gd_armazena}if % imprime a ultima palavra
postscript     }ifelse 
postscript   }for
postscript   /gd_tamanho gd_numpal -1 add def
postscript }def

postscript /bracinho {
postscript     3 2 roll
postscript     gd_separa_palavras
postscript     gd_tamanho 3 -2 roll gd_guitarN
postscript     /Times-Bold 8 selectfont % impressão da casa (posição)
postscript     4 gd_tamanho mul 2 sub 18.5 moveto gd_palavras 0 get 20 string cvs
postscript     dup 0 get(-)0 get eq{
postscript          pop % não imprime string começando com -
postscript     }{
postscript          % tenta achar caracter ^ (nome do acorde)
postscript          (^) search {
postscript              show % imprime casa à direita
postscript              pop  % ignora caracter ^
postscript              (\0)search{3 1 roll pop pop}if % ignora brancos
postscript              gd_nome? false eq{pop ()}if % string vazia
postscript              /Helvetica 10 selectfont
postscript              gd_Nv gd_Nv 2 div sub 31 M showc % imprime nome do acorde
postscript              % gd_Nv é gerada por gd_guitarN
postscript          }{
postscript              show % imprime casa à direita
postscript          } ifelse
postscript     }ifelse
postscript     /gd_def_y{dup /gd_y exch def}def 
postscript     /gd_pest-x 0 def
postscript     /gd_pest-y 0 def
postscript     /gd_pest2-x 0 def
postscript     /gd_pest2-y 0 def
postscript     /gd_y 0 def
postscript     1 1 gd_tamanho {
postscript        dup /gd_indd exch def
postscript        /gd_x exch 1 sub 4 mul def
postscript        0 1 gd_tempstring length 2 sub {
postscript        /gd_ind2 exch def
postscript        gd_palavras gd_indd get gd_ind2 get
postscript        dup (x) 0 get eq {gd_x gd_gx} if
postscript        dup (0) 0 get eq {gd_x gd_go} if
postscript        dup (1) 0 get eq {gd_x 21 gd_def_y gd_dot} if
postscript        dup (2) 0 get eq {gd_x 15 gd_def_y gd_dot} if
postscript        dup (3) 0 get eq {gd_x  9 gd_def_y gd_dot} if
postscript        dup (4) 0 get eq {gd_x  3 gd_def_y gd_dot} if
postscript        dup (5) 0 get eq {gd_x -3 gd_def_y gd_dot} if
postscript        dup (6) 0 get eq {gd_x -6 gd_def_y gd_dot} if
postscript        pop
postscript        gd_palavras gd_indd get gd_ind2 1 add get % segundo caracter (pestana?)
postscript        % pestana
postscript        /gd_oldlw currentlinewidth def
postscript        2.8 setlinewidth
postscript        dup ([) 0 get eq {gd_x gd_y /gd_pest-y exch def /gd_pest-x exch def} if
postscript        dup (])0 get eq{gd_x gd_y moveto gd_pest-x gd_pest-y lineto stroke}if
postscript        % segunda pestana
postscript        dup ({) 0 get eq {gd_x gd_y /gd_pest2-y exch def /gd_pest2-x exch def} if
postscript        dup(})0 get eq{gd_x gd_y moveto gd_pest2-x gd_pest2-y lineto stroke}if
postscript        pop
postscript        gd_oldlw setlinewidth
postscript      } for
postscript    } for
postscript    grestore % gsave está dentro de gd_guitarN
postscript }def

postscript /bracinho_grande{gsave 2 dup scale T 0 0 bracinho grestore}!

%
% These 4 operators were adapted from Jean-François Moine (deco.abc):
%
postscript /gd_guitarN{		% usage: N x y gd_guitarN
postscript    gsave 8 add T
postscript    %1.2 dup scale % zoom
postscript    /gd_NNN exch def  /gd_Nv gd_NNN 1 sub 4 mul def
postscript    gd_Nv 2 div neg 0 T % centraliza
postscript    1.5 setlinewidth -0.3 30.6 M gd_Nv 0.6 add 0 RL stroke
postscript    0.6 setlinewidth
postscript    -.3 0 M gd_Nv .6 add 0 RL % % considera espessura da linha
postscript    0 6 M gd_Nv 0 RL
postscript    0 12 M gd_Nv 0 RL
postscript    0 18 M gd_Nv 0 RL
postscript    0 24 M gd_Nv 0 RL
postscript    0 1 gd_NNN 1 sub{4 mul 0 M 0 30 RL}for
postscript    stroke 0.5 setlinewidth
postscript    0 6 T}def
%
postscript /gd_dot{newpath 1.4 0 360 arc fill}def
%
postscript /gd_gx{28 M -1.3 -1.3 RM 2.6 2.6 RL 0 -2.6 RM -2.6 2.6 RL stroke}def
%
postscript /gd_go{28 newpath 1.5 0 360 arc stroke}def


%
% rotinas para testes
%

postscript /gd_imprime_palavras{
postscript     0 1 gd_tamanho {
postscript       gd_palavras exch get 20 string cvs show
postscript     }for
postscript } def

postscript /gd_teste {
postscript     M gd_separa_palavras gd_imprime_palavras
postscript } def


